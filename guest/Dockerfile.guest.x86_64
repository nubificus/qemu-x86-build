FROM debian:latest as linux-builder

# install prerequisites
RUN apt-get update && apt-get install -y build-essential git \
	libz-dev bin86 bison flex wget bc libelf-dev libssl-dev \
	init udev kmod && apt-get clean
RUN git clone https://github.com/torvalds/linux -b v4.20 --depth 1

# build linux kernel
WORKDIR /linux
COPY vm.config arch/x86/configs/
RUN touch .config && make vm.config && make vmlinux -j$(nproc) bzImage
RUN make modules modules_install INSTALL_MOD_PATH=/modules

FROM linux-builder as virtio-builder
# get virtio-accel source
ARG TOKEN
WORKDIR /
RUN git clone https://${TOKEN}:x-oauth-basic@github.com/cloudkernels/virtio-accel

# build virtio-accel
WORKDIR /virtio-accel
RUN make modules modules_install KDIR=/linux INSTALL_MOD_PATH=/modules

FROM ubuntu:latest as rootfs-builder
COPY --from=virtio-builder /modules/* /lib/
RUN mkdir /lib/modules-load.d && \
	echo "virtio_accel" > /lib/modules-load.d/virtio_accel.conf
RUN sed s/root\:x\:/root\:\:/ -i /etc/passwd && \
	sed s/root\:\*\:/root\:\:/ -i /etc/shadow && \
	apt-get update && apt-get -y install init udev kmod && \
	apt-get clean

# build classify example
FROM rootfs-builder as virtio-examples-builder
ARG TOKEN
RUN apt-get update && apt-get install -y build-essential git

WORKDIR /
RUN git clone https://${TOKEN}:x-oauth-basic@github.com/cloudkernels/vaccel-runtime.git -b timers-wip
COPY --from=virtio-builder /virtio-accel /virtio-accel
WORKDIR /virtio-accel
RUN USR_CFLAGS="-I/vaccel-runtime" make test-class_op && \
	cp test-class_op /usr/local/bin/classify


FROM scratch as artifacts
COPY /create_rootfs.sh /
COPY --from=linux-builder /linux/arch/x86/boot/bzImage /
COPY --from=linux-builder /linux/vmlinux /
COPY --from=rootfs-builder / /rootfs
COPY --from=virtio-examples-builder /usr/local /rootfs/usr/local
COPY /dog_0.jpg	/rootfs/root/
